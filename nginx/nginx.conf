#user  nginx;
worker_processes  auto; # cpu密集型写cpu个数，其他写cpu的2倍，偷懒写auto
#worker_cpu_affinity 0001 0010 0100 1000; # 线程绑定cpu

worker_rlimit_nofile    65536;
error_log  /var/log/nginx/error.log info; 
#pid        logs/nginx.pid;

events
{
    use epoll;  # 复用客户端线程的轮询方法
    accept_mutex off;
    worker_connections  65536;
}

http
{
    include       mime.types;
    default_type  text/html;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"'
          '"$upstream_cache_status"';
    access_log  /var/log/nginx/access.log  main;

    sendfile    on;
    server_tokens off; # 隐藏Nginx版本号
    keepalive_timeout  60;
    client_header_buffer_size 4k;
    client_body_buffer_size 320k;
    client_max_body_size     8m;
    keepalive_requests  8192;
    large_client_header_buffers 4 32k;
    server_names_hash_bucket_size 128; 

    open_file_cache max=65536  inactive=60s;
    open_file_cache_valid      80s;
    open_file_cache_min_uses   1;

    proxy_connect_timeout 50;
    proxy_read_timeout 50;
    proxy_send_timeout 50;
    proxy_buffer_size 320k;
    proxy_buffers  4 640k;
    proxy_busy_buffers_size 1280k;
    proxy_temp_file_write_size 1024m;
    proxy_ignore_client_abort on;
    proxy_temp_path  /tmp/temp;
    proxy_cache cache_one;
    proxy_cache_valid 200 302 1m;
    proxy_cache_valid 301 1m;
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;

    proxy_redirect          off;    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    add_header X-Cache-Status $upstream_cache_status;
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    fastcgi_temp_path  /tmp/fastcgi_temp; # php缓存配置
    fastcgi_cache_path /tmp/fastcgi_cache levels=1:2 keys_zone=cache_fastcgi:128m inactive=30m max_size=1g;
    fastcgi_cache_key $request_method://$host$request_uri;
    fastcgi_cache_valid 200 302 1h;
    fastcgi_cache_valid 301     1d;
    fastcgi_cache_valid any     1m;
    fastcgi_cache_min_uses 1;
    fastcgi_cache_use_stale error timeout http_500 http_503 invalid_header;

    gzip  on;
    gzip_min_length 1k;   # 指定压缩文件的最小尺寸
    gzip_buffers  4 64k;
    gzip_http_version 1.1;
    gzip_comp_level 2;  # 压缩等级为2
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;  # 允许压缩的文件类型

    charset UTF-8;

  include /etc/nginx/conf.d/*.conf;
  #include /usr/local/nginx/conf/httpsconf/*.conf;
  }
